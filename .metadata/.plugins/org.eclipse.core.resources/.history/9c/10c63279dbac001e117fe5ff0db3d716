#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

extern "C"
{

extern ADC_HandleTypeDef hadc1;
long map(long x, long in_min, long in_max, long out_min, long out_max) {
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}


}


Model::Model() : modelListener(0) ,Button_State(false),ADC_VALUE(0)
{

}

void Model::tick()
{

	if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0)) {

		Button_State = true;
	}
	else Button_State = false;

	 HAL_ADC_Start(&hadc1);
	 HAL_ADC_PollForConversion(&hadc1, 10);
	 uint16_t value = HAL_ADC_GetValue(&hadc1);
	 HAL_ADC_Stop(&hadc1);

	 ADC_VALUE = map(value, 0, 4095, 0, 100);
	modelListener->
}
