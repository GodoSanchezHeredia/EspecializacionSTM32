/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/escena2_screen/Escena2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

Escena2ViewBase::Escena2ViewBase() :
    buttonCallback(this, &Escena2ViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &Escena2ViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 240, 320);
    box1.setColor(touchgfx::Color::getColorFromRGB(61, 0, 0));
    add(box1);

    flexButton1.setBoxWithBorderPosition(0, 0, 128, 50);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 5), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(102, 0, 0), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton1.setAction(flexButtonCallback);
    flexButton1.setPosition(68, 270, 128, 50);
    add(flexButton1);

    textArea1.setXY(103, 59);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5O4T).getText());
    textArea1.setWildcard(textArea1Buffer);
    textArea1.resizeToCurrentText();
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W0OF));
    add(textArea1);

    buttonWithIcon2.setXY(0, 177);
    buttonWithIcon2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_DOWN_50_50_E8F6FB_SVG_ID));
    buttonWithIcon2.setIconXY(97, 0);
    buttonWithIcon2.setAction(buttonCallback);
    add(buttonWithIcon2);

    buttonWithIcon1.setXY(0, 110);
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_UP_50_50_E8F6FB_SVG_ID));
    buttonWithIcon1.setIconXY(95, 0);
    buttonWithIcon1.setAction(buttonCallback);
    add(buttonWithIcon1);
}

Escena2ViewBase::~Escena2ViewBase()
{

}

void Escena2ViewBase::setupScreen()
{

}

void Escena2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithIcon1)
    {
        //up
        //When buttonWithIcon1 clicked call virtual function
        //Call UpCounter
        UpCounter();
    }
    if (&src == &buttonWithIcon2)
    {
        //Down
        //When buttonWithIcon2 clicked call virtual function
        //Call DownCounter
        DownCounter();
    }
}

void Escena2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction1
        //When flexButton1 clicked change screen to Escena3
        //Go to Escena3 with screen transition towards East
        application().gotoEscena3ScreenSlideTransitionEast();
    }
}
